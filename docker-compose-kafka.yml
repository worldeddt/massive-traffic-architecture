version: "1.0"


services:
  cassandra-node-0:
    image: cassandra
    container_name: cassandra-node-0
    environment:
      - CASSANDRA_SEEDS=cassandra-node-0
      - CASSANDRA_CLUSTER_NAME=MyCluster
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=dc1
      - HEAP_NEWSIZE=128M
      - MAX_HEAP_SIZE=1024M
    ports:
      - "7000:7000"   # 노드간 클러스터 내부 통신
      - "7001:7001"   # 노드간 보안 통신에 사용
      - "9042:9042"   # CQL 클라이언트와 통신
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 10s
      timeout: 10s
      retries: 50
    networks:
      black-net:
        ipv4_address: 172.18.0.2

  db:
    image: "mariadb:latest"
    container_name: db
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: eddy
    volumes:
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - redis
    networks:
      black-net:
        ipv4_address: 172.18.0.5

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      black-net:
        ipv4_address: 172.18.0.6

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "22181:2181"
    healthcheck:
      test: nc -z localhost 2181 || exit 1
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 10s
    networks:
      black-net:
        ipv4_address: 172.18.0.16
  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "172.18.0.16:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:19092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    networks:
      black-net:
        ipv4_address: 172.18.0.15
  kafka2:
    container_name: kafka2
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "19093:19093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "172.18.0.16:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9092,EXTERNAL://localhost:19093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    networks:
      black-net:
        ipv4_address: 172.18.0.14
  kafka3:
    container_name: kafka3
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "19094:19094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "172.18.0.16:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:9092,EXTERNAL://localhost:19094
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    networks:
      black-net:
        ipv4_address: 172.18.0.13

  massive-catalog:
    image: massive-catalog
    container_name: massive-catalog
    ports:
      - "8084:8084"
    depends_on:
      - db
      - cassandra-node-0
    environment:
      - SPRING_CASSANDRA_CONTACT_POINTS=cassandra-node-0
      - SPRING_CASSANDRA_CONTACT-POINTS=cassandra-node-0
      - SPRING_CASSANDRA_PORT=9042
      - SPRING_CASSANDRA_KEYSPACE-NAME=catalog
    networks:
      black-net:
        ipv4_address: 172.18.0.10

  massive-search:
    image: massive-search
    container_name: massive-search
    ports:
      - "8085:8085"
    depends_on:
      - db
    networks:
      black-net:
        ipv4_address: 172.18.0.11

networks:
  black-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16